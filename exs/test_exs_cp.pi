import os,exs,util.

main =>
    top.

top ?=>
    fibp(10,F),
    writeln($fibp(10,F)),
    fail.
top ?=>
    writef("%w = %d%n",$fibf(10),fibf(10)),
    fail.
top ?=>
    writef("%w = %d%n",$fibfa(10),fibfa(10)),
    fail.
top ?=>
    writef("%w = %d%n",$fibc(10),fibc(10)),
    fail.
top ?=>
    writef("%w = %d%n",$fibt(10),fibt(10)),
    fail.
top ?=>
    my_member(X,[1,2,3]),
    writef("%w%n",$member(X,[1,2,3])),
    fail.
top ?=>
    my_between(1,3,X),
    writef("%w%n",$between(1,3,X)),
    fail.
top ?=>
    writef("%w=%w%n",$merge_sort([3,4,1]),merge_sort([3,4,1])),
    fail.
top ?=>
    writef("%w=%w%n",$insert_sort([3,4,1]),insert_sort([3,4,1])),
    fail.
top ?=>
    min_max_p([1,3,4],Min,Max),
    writef("%w=(%d,%d)%n",$min_max_p([1,3,4],Min,Max),Min,Max),
    fail.
top ?=>
    writef("%w=%w%n",$sum_list([3,4,1]),sum_list([3,4,1])),
    fail.
top ?=>
    divide_main,
    fail.
top ?=>
    writef("%w=%w%n",$sum_list_imp([3,4,1]),sum_list_imp([3,4,1])),
    fail.
top ?=>
    min_max_ip([1,3,4], Min, Max),
    writef("%w=(%d,%d)%n",$min_max_ip([1,3,4],Min,Max),Min,Max),
    fail.
top ?=>
    writef("%w=%w%n",$replace([a,b,[a,b,[a,b]]],a,b),replace([a,b,[a,b,[a,b]]],a,b)),
    fail.
top ?=>
    writef("%w=%w%n",$list_of_lists(5),list_of_lists(5)),
    fail.
top ?=>
    writef("%w=%w%n",$another_list_of_lists(5),another_list_of_lists(5)),
    fail.
top ?=>
    writef("%w=%w%n",$qsort([3,4,1]),qsort([3,4,1])),
    fail.
top ?=>
    writef("%w=%w%n",$power_set([1,2,3]),power_set([1,2,3])),
    fail.
top ?=>
    writef("%w=%w%n",$perm([1,2,3]),perm([1,2,3])),
    fail.
top ?=>
    A = {{1,2},{2,3},{3,4}},
    B = {{1,2,3},{2,3,4}},
    writef("%w*%w=%w%n",A,B,matrix_multi(A,B)),
    fail.
top ?=>
    writef("%w=%w%n",$primes(100),primes(100)),
    fail.
top ?=>
    sp(1,2,Path,W),
    writef("%w%n",$sp(1,2,Path,W)),
    fail.
top ?=>
    edit([1,2,3],[3,2,1],D),
    writef("%w%n",$edit([1,2,3],[3,2,1],D)),
    fail.
top ?=>
    farmer,
    fail.
top ?=>
    sendmory,
    fail.

top ?=>
    once(queens(100)),
    fail.
top ?=>
    once(queens2(100,Q)),
    writeln(Q),
    fail.
top ?=>
    once(color(3,3)),
    fail.
top ?=>
    once(bcolor(3,3)),
    fail.
top ?=>
    (file_exists("test_exs.pi") -> copy("test_exs.pi","test_exs_cp.pi"); true),
    fail.
top ?=>
    S1=$student("john","cs",3),
    S2=$student("marry","math",4.0),
    output_students([S1,S2]),
    fail.
top ?=>
    writef("%w=%w%n",$map(-,[1,2,3]),map(-,[1,2,3])),
    fail.
top ?=>
    writef("%w=%w%n",$map(+,[1,2,3],[4,5,6]),map(+,[1,2,3],[4,5,6])),
    fail.
top ?=>
    writef("%w=%w%n",$fold(+,0,[1,2,3]),fold(+,0,[1,2,3])),
    fail.
top ?=>
    test_ar,
    fail.
top => true.


