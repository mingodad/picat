%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
scc_d_grid(G) =>
    scc_d_grid(G,_K).

scc_d_grid(G,K) =>
    grid_check_matrix(G,scc_grid,NRows,NCols),
    Vs = [{(R,C), G[R,C]} : R in 1..NRows, C in 1..NCols],
    Es = [{Pos,Pos1,_} : R in 1..NRows, C in 1..NCols,
                         Pos = (R,C),
                         grid_neibs(G,NRows,NCols,R,C,Neibs),
                         Pos1 in Neibs],
    scc_d(Vs,Es,K).

scc_d(Vs,Es) =>
    scc_d(Vs,Es,_).

scc_d(Vs,Es,K) =>
    VMap = new_map(),
    DegMap = new_map(),
    foreach({V,B} in Vs)
        B :: 0..1,
        VMap.put(V, B),
        DegMap.put(V, 0)
    end,
    K #= sum([B : {_,B} in Vs]),
    %
    EMap = new_map(),
    foreach ({V1,V2,B} in Es)
        B :: 0..1,
        B1 = VMap.get(V1),
        B2 = VMap.get(V2),
        EMap.put((V1,V2),B),
        B #=> B1,
        B #=> B2
    end,
    %    
    VEMap = new_map(),
    foreach({V1,V2,B} in Es)
        Key = (V1,V2),
        VEMap.put(Key,[B]),
        DegMap.put(V1, DegMap.get(V1)+1),
        DegMap.put(V2, DegMap.get(V2)+1)
    end,
    RVs = [V : {V,_} in Vs],
    scc_d_vertex_elimination(VMap, DegMap, VEMap, 0, RVs).      % GEmpty = 0, initial graph is not empty

scc_d_vertex_elimination(VMap, DegMap,  VEMap, GEmpty, [])  => GEmpty = 1.            
scc_d_vertex_elimination(VMap, DegMap,  VEMap, GEmpty, [FV|RVs]) =>
    choose_vertex_to_cut(DegMap, FV, DegMap.get(FV), RVs, W, _, RVs1),
    GEmpty1 :: 0..1,
    #~GEmpty #\/ GEmpty1,
    BW = VMap.get(W),
    #~GEmpty #\/ #~BW,                                           % GEmpty -> ~BW
    InNeibs = [(V,B) : V in RVs1, Key = (V,W), VEMap.has_key(Key), Bs = VEMap.get(Key), B #= max(Bs)],
    OutNeibs = [(V,B) : V in RVs1, Key = (W,V), VEMap.has_key(Key), Bs = VEMap.get(Key), B #= max(Bs)],    
    foreach((V,_) in InNeibs)
        DegMap.put(V, DegMap.get(V)-1)
    end,
    foreach((V,_) in OutNeibs)
        DegMap.put(V, DegMap.get(V)-1)
    end,
    BInNeibs = [B : (_,B) in InNeibs],
    BOutNeibs = [B : (_,B) in OutNeibs],
    sum([BW|BInNeibs]) #= 1 #=> GEmpty1 #= 1,        % if W has no incoming arcs, G becomes empty after W is eliminated
    sum([BW|BOutNeibs]) #= 1 #=> GEmpty1 #= 1,       % if W has no outgoing arcs, G becomes empty after W is eliminated    
    foreach ((U,Buw) in InNeibs, U !== W, (V,Bwv) in OutNeibs, V !== W)
        Key = (U,V),
        if not VEMap.has_key(Key) then
            DegMap.put(U, DegMap.get(U)+1),
            DegMap.put(V, DegMap.get(V)+1)
        end,
        Buw #/\ Bwv #<=> Buv,
        VEMap.put(Key, [Buv|VEMap.get(Key,[])])
    end,
    scc_d_vertex_elimination(VMap, DegMap, VEMap, GEmpty1, RVs1).

