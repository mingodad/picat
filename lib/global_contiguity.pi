/*

  Global constraint global contiguity in Picat.

  From Global constraint catalog
  http://www.emn.fr/x-info/sdemasse/gccat/Cglobal_contiguity.html
  """
  Enforce all variables of the VARIABLES collection to be assigned to 
  0 or 1. In addition, all variables assigned to value 1 appear contiguously.
  """

  The implementation of global contiguity below was inspired by 
  Toby Walsh's presentation "Sliding Constraints"
     http://www.cse.unsw.edu.au/~tw/samos/slide.ppt
  where he defines it in terms of the global constraint slide.


  Model created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import cp.

main => go.

go ?=>
   go(20).
go => true.

go(N) ?=>
   X = new_list(N),
   X :: 0..1,

   global_contiguity(X),
   
   solve([],X),
   writeln(X), 
   nl,
   fail.
go(_N) => true.



%
% contiguity: all variables assigned to value 1 appear contiguously.
%
global_contiguity(X) =>

   Len = length(X),
   Y = new_list(Len),
   Y :: 0..2,
    
   increasing(Y),
   foreach({XVal,YVal} in zip(X,Y))
      BX :: 0..1,
      BY :: 0..1,
      (XVal #= 1) #<=> BX #= 1,
      (YVal #= 1) #<=> BY #= 1,
      BX #= BY
   end.


increasing(List) =>
   foreach(I in 2..List.length) List[I-1] #=< List[I] end.