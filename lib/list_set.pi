module list_set.

delete(LSet,Elm) = LSet1 => bp.list_set_del_element(LSet,Elm,LSet1).
disjoint(LSet1,LSet2) => bp.list_set_disjoint(LSet1,LSet2).
insert(LSet,Elm) = LSet1 => bp.b_LIST_SET_INSERT_ccf(LSet,Elm,LSet1).
intersection(LSet1,LSet2)=LSet3 => bp.list_set_intersection(LSet1,LSet2,LSet3).
membchk(E,LSet) => bp.list_set_member(E,LSet).
new_list_set(List) = LSet => new_list_set_aux(List,[],LSet).
list_set(Term) => bp.is_list_set(Term).
subset(LSet1,LSet2) => bp.list_set_subset(LSet1,LSet2).
subtract(LSet1,LSet2)=LSet3 => bp.list_set_subtract(LSet1,LSet2,LSet3).
union(LSet1,LSet2)=LSet3 => bp.list_set_union(LSet1,LSet2,LSet3).

new_list_set_aux([],LSet0,LSet) => LSet = LSet0.
new_list_set_aux([E|List],LSet0,LSet) => 
    bp.b_LIST_SET_INSERT_ccf(LSet0,E,LSet1),
	new_list_set_aux(List,LSet1,LSet).

